{"version":3,"sources":["./src/app/auth/forgot-password/forgot-password.component.ts","./src/app/auth/forgot-password/forgot-password.component.html","./src/app/auth/auth/auth.component.ts","./src/app/auth/auth/auth.component.html","./src/app/auth/auth.module.ts","./src/app/auth/register/register.component.ts","./src/app/auth/register/register.component.html","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/success/success.component.ts","./src/app/auth/success/success.component.html","./src/app/auth/reset-password/reset-password.component.ts","./src/app/auth/reset-password/reset-password.component.html","./src/app/auth/new-password/new-password.component.ts","./src/app/auth/new-password/new-password.component.html"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss']\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"content content-auth\">\r\n    <a [routerLink]=\"['/auth/login']\" class=\"btn _outline close-btn flaticon-cancel\"></a>\r\n\r\n    <div class=\"content__form\">\r\n        <h1 class=\"title\">Reset password</h1>\r\n        <div class=\"description\">Enter your email address to receive an email\r\n            and reset your password</div>\r\n        <form class=\"form\">\r\n            <label for=\"\" class=\"form__input error\">\r\n                <div class=\"form__input--label\">E-mail</div>\r\n                <input type=\"text\" placeholder=\"email\">\r\n                <div class=\"error__item\">Please enter an email address.</div>\r\n            </label>\r\n\r\n            <button class=\"btn form__btn\">Send email</button>\r\n        </form>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.scss']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section class=\"wrapper auth-wrapper\">\r\n    <router-outlet></router-outlet>\r\n    <div class=\"content-img content\">\r\n        <a [routerLink]=\"['/home']\" class=\"logo\"><img src=\"assets/images/logo.png\" alt=\"\"></a>\r\n        <picture class=\"auth-img\">\r\n            <img src=\"assets/images/auth.png\" alt=\"\" >\r\n        </picture>\r\n    </div>\r\n</section>\r\n\r\n\r\n\r\n\r\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AppInterceptor } from './../_interceptors/app.interceptor';\r\nimport { SharedModule } from './../shared/shared.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { SuccessComponent } from './success/success.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\r\nimport { NewPasswordComponent } from './new-password/new-password.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthComponent } from './auth/auth.component';\r\n\r\nconst routes: Routes = [\r\n  { path: \"success\", component: SuccessComponent },\r\n  { path: \"confirm-email\", component: SuccessComponent },\r\n  {\r\n    path: '',\r\n    component: AuthComponent,\r\n    children: [\r\n      {\r\n        path: \"\", redirectTo: 'login', pathMatch: \"full\"\r\n      },\r\n      {\r\n        path: \"login\", component: LoginComponent\r\n      },\r\n      {\r\n        path: \"register\", component: RegisterComponent\r\n      },\r\n      {\r\n        path: \"forgot-password\", component: ForgotPasswordComponent\r\n      },\r\n      {\r\n        path: \"reset-password\", component: ResetPasswordComponent\r\n      },\r\n    ]\r\n  }\r\n]\r\n\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, RegisterComponent, SuccessComponent, ForgotPasswordComponent, ResetPasswordComponent, NewPasswordComponent, AuthComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    SharedModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AppInterceptor, multi: true },\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n","import { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport { QueriesService } from './../../_services/queries.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { trimValidator } from 'src/app/_utils/formValidationUtils';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { passwordConfirmValidatorPartPasswordConfirm, passwordConfirmValidatorPartPassword } from '../../_utils/formValidationUtils';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  regForm = new FormGroup({\r\n    firstName: new FormControl('Mitya', [Validators.required, Validators.maxLength(128), Validators.minLength(2), trimValidator]),\r\n    lastName: new FormControl('Kr', [Validators.required, Validators.maxLength(128), Validators.minLength(2), trimValidator]),\r\n    email: new FormControl('d.m.i.t.r.i.i10051997@gmail.com', [Validators.required, Validators.maxLength(128), trimValidator, Validators.email]),\r\n    password: new FormControl('111111', [Validators.required, Validators.maxLength(16), Validators.minLength(6)]),\r\n    acceptTerms: new FormControl(true, [Validators.requiredTrue])\r\n  });\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private query: QueriesService,\r\n    private auth: AuthService,\r\n    private router: Router\r\n  ) {\r\n    this.regForm.addControl(\"repeatPassword\", new FormControl('111111', [\r\n      passwordConfirmValidatorPartPasswordConfirm.bind(this, this.regForm.controls.password)\r\n    ]));\r\n    this.regForm.controls.password.setValidators([\r\n      Validators.required, Validators.maxLength(128), Validators.minLength(6), trimValidator,\r\n      passwordConfirmValidatorPartPassword.bind(this, this.regForm.controls.repeatPassword)\r\n    ]);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.regForm.controls.repeatPassword.setValidators([\r\n    //   Validators.required,\r\n    //   this.checkPasswords.bind(this.regForm)\r\n    // ]);\r\n  }\r\n\r\n\r\n  checkPasswords(group: FormGroup) {\r\n    const password = this['controls'].password.value;\r\n    const repeatPassword = this['controls'].repeatPassword.value;\r\n\r\n    return password === repeatPassword ? null : { passwordConfirmError: true }\r\n  }\r\n\r\n\r\n  confirmRegister() {\r\n    console.log('REG: ', this.regForm);\r\n\r\n    this.regForm.markAllAsTouched();\r\n    this.regForm.updateValueAndValidity();\r\n\r\n\r\n    if (this.regForm.valid) {\r\n      console.log('CONGRATULATIONS!');\r\n      this.auth.register({\r\n        email: this.regForm.controls.email.value,\r\n        firstName: this.regForm.controls.firstName.value,\r\n        lastName: this.regForm.controls.lastName.value,\r\n        password: this.regForm.controls.password.value,\r\n      }).then((data) => {\r\n        console.log('D: ', data);\r\n        this.regForm.enable();\r\n        // if (!!data)\r\n        this.router.navigate(['auth', 'confirm-email']);\r\n      });\r\n\r\n      this.regForm.disable();\r\n    } else\r\n      console.log('ПШЕЛ ВОН, ПЁС!');\r\n  }\r\n\r\n}\r\n","<div class=\"content content-auth\">\r\n    <a [routerLink]=\"['/home']\" class=\"btn _outline close-btn flaticon-cancel\"></a>\r\n\r\n    <div class=\"content__form\">\r\n        <h1 class=\"title\">Welcome to Radio Test!</h1>\r\n        <div class=\"description\">Register your account</div>\r\n        <form [formGroup]=\"regForm\" novalidate (submit)=\"confirmRegister()\" class=\"form\">\r\n            <label for=\"\" class=\"form__input\" [class.error]=\"false\">\r\n                <div class=\"form__input--label\">First name</div>\r\n                <input type=\"text\" formControlName=\"firstName\" placeholder=\"First name\">\r\n                <app-validation-error-show [control]=\"regForm.controls.firstName\"></app-validation-error-show>\r\n            </label>\r\n            <label for=\"\" class=\"form__input\">\r\n                <div class=\"form__input--label\">Last name</div>\r\n                <input type=\"text\" formControlName=\"lastName\" placeholder=\"Last name\">\r\n                <app-validation-error-show [control]=\"regForm.controls.lastName\"></app-validation-error-show>\r\n            </label>\r\n            <label for=\"\" class=\"form__input\">\r\n                <div class=\"form__input--label\">E-mail</div>\r\n                <input type=\"email\" formControlName=\"email\" placeholder=\"email\">\r\n                <app-validation-error-show [control]=\"regForm.controls.email\"></app-validation-error-show>\r\n                <!-- <div class=\"error__item\">Please enter an email address.</div> -->\r\n            </label>\r\n            <label for=\"\" class=\"form__input\">\r\n                <div class=\"form__input--label\">Password</div>\r\n                <input type=\"password\" formControlName=\"password\" autocomplete=\"new-password\" placeholder=\"password\">\r\n                <app-validation-error-show [control]=\"regForm.controls.password\"></app-validation-error-show>\r\n            </label>\r\n            <label for=\"\" class=\"form__input\">\r\n                <div class=\"form__input--label\">Repeat password</div>\r\n                <input type=\"password\" formControlName=\"repeatPassword\" placeholder=\"password\">\r\n                <app-validation-error-show [control]=\"regForm.controls.repeatPassword\"></app-validation-error-show>\r\n            </label>\r\n            <div class=\"wrapper\">\r\n                <label for=\"check\" class=\"form__checkbox\">\r\n                    <!-- <span class=\"text checkmark\">By signing up, I agree with -->\r\n                    <!-- <a [routerLink]=\"['/privacy']\">terms</a>  and <a [routerLink]=\"['/privacy']\">privacy policy</a>  -->\r\n\r\n                    <input type=\"checkbox\" formControlName=\"acceptTerms\" checked=\"checked\" id=\"check\" />\r\n                    <span class=\"text checkmark\">By signing up, I agree with\r\n                        <a [routerLink]=\"['/privacy']\">terms</a> and <a [routerLink]=\"['/privacy']\">privacy policy</a>\r\n                    </span>\r\n                </label>\r\n\r\n            </div>\r\n            <app-validation-error-show [control]=\"regForm.controls.acceptTerms\"></app-validation-error-show>\r\n            <button [disabled]=\"regForm.invalid || regForm.disabled\" class=\"btn form__btn\">Sign up</button>\r\n        </form>\r\n\r\n        <div class=\"wrapper-navigation\">\r\n            <span>Already a member? </span>\r\n            <a class=\"form__link\" [routerLink]=\"['/auth/login']\">Sign in!</a>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { Router } from '@angular/router';\r\nimport { AuthService } from './../../_services/auth.service';\r\nimport { trimValidator } from 'src/app/_utils/formValidationUtils';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm = new FormGroup({\r\n    email: new FormControl('d.m.i.t.r.i.i10051997@gmail.com', [Validators.required, Validators.maxLength(128), trimValidator, Validators.email]),\r\n    password: new FormControl('111111', [Validators.required, Validators.maxLength(16), Validators.minLength(6)])\r\n  });\r\n\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  login() {\r\n    console.log('REG: ', this.loginForm);\r\n\r\n    this.loginForm.markAllAsTouched();\r\n    this.loginForm.updateValueAndValidity();\r\n\r\n\r\n    if (this.loginForm.valid) {\r\n      console.log('CONGRATULATIONS!');\r\n      this.auth.login(\r\n        this.loginForm.controls.email.value,\r\n        this.loginForm.controls.password.value,\r\n      ).then((data) => {\r\n        console.log('D: ', data);\r\n        this.loginForm.enable();\r\n        this.router.navigate(['radio-test']);\r\n        // if (!!data)\r\n        // this.router.navigate(['auth', 'confirm-email']);\r\n      });\r\n\r\n      this.loginForm.disable();\r\n    } else\r\n      console.log('ПШЕЛ ВОН, ПЁС!');\r\n  }\r\n\r\n}\r\n","<div class=\"content content-auth\">\r\n    <a [routerLink]=\"['/home']\" class=\"btn _outline close-btn flaticon-cancel\"></a>\r\n\r\n    <div class=\"content__form\">\r\n        <h1 class=\"title\">Welcome to Radio Test!</h1>\r\n        <div class=\"description\">Log in to your account.</div>\r\n        <form [formGroup]=\"loginForm\" novalidate (submit)=\"login()\" class=\"form\">\r\n            <label for=\"\" class=\"form__input\" [class.error]=\"false\">\r\n                <div class=\"form__input--label\">E-mail</div>\r\n                <input type=\"text\" formControlName=\"email\" placeholder=\"email\">\r\n                <app-validation-error-show [control]=\"loginForm.controls.email\"></app-validation-error-show>\r\n            </label>\r\n            <label for=\"\" class=\"form__input\" [class.error]=\"false\">\r\n                <div class=\"form__input--label\">Password</div>\r\n                <input type=\"password\" formControlName=\"password\" placeholder=\"password\">\r\n                <app-validation-error-show [control]=\"loginForm.controls.password\"></app-validation-error-show>\r\n            </label>\r\n            <!-- <label for=\"\" class=\"form__input error\">\r\n                <div class=\"form__input--label\">E-mail</div>\r\n                <input type=\"text\" placeholder=\"email\">\r\n                <div class=\"error__item\">Please enter an email address.</div>\r\n            </label> -->\r\n            <!-- <label for=\"\" class=\"form__input\">\r\n                <div class=\"form__input--label\">Password</div>\r\n                <input type=\"password\" placeholder=\"password\">\r\n            </label> -->\r\n            <div class=\"wrapper\">\r\n                <!-- <label for=\"\" class=\"form__checkbox\">\r\n                    <span class=\"text\">Ține-mă minte</span> \r\n                    <input type=\"checkbox\" checked=\"checked\"> <span class=\"checkmark\"></span>\r\n                </label> -->\r\n                <a class=\"form__link\" [routerLink]=\"['/auth/forgot-password']\"\r\n                    routerLinkActive=\"router-link-active\">Forgot Password?</a>\r\n            </div>\r\n            <button class=\"btn form__btn\">Sign in</button>\r\n        </form>\r\n\r\n        <div class=\"wrapper-navigation\">\r\n            <span>Not a member? </span>\r\n            <a class=\"form__link\" [routerLink]=\"['/auth/register']\">Sign up!</a>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-success',\r\n  templateUrl: './success.component.html',\r\n  styleUrls: ['./success.component.scss']\r\n})\r\nexport class SuccessComponent implements OnInit {\r\n\r\n  msg = '';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    if (location.pathname.includes('confirm-email'))\r\n      this.msg = 'We need you to confirm your email address. An email with verification instructions has been sent to your email address.';\r\n    else if (location.pathname.includes('success'))\r\n      this.msg = 'Congratulations, your email address has been verified, please login using your credentials.';\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <a href=\"\" class=\"logo\"><img src=\"assets/images/logo.png\" alt=\"\"></a>\r\n    <p class=\"description\">{{ msg }}</p>\r\n    <i class=\"succes-icon flaticon-medal\"></i>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.scss']\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"content content-auth\">\r\n    <a [routerLink]=\"['/home']\" class=\"btn _outline close-btn flaticon-cancel\"></a>\r\n\r\n    <div class=\"content__form\">\r\n        <h1 class=\"title\">Reset password</h1>\r\n        <div class=\"description\">Enter the new password</div>\r\n        <form class=\"form\">\r\n\r\n            <label for=\"\" class=\"form__input\">\r\n                <div class=\"form__input--label\">New password</div>\r\n                <input type=\"password\" placeholder=\"***********\">\r\n            </label>\r\n            <label for=\"\" class=\"form__input\">\r\n                <div class=\"form__input--label\">Repeat new password</div>\r\n                <input type=\"password\" placeholder=\"***********\">\r\n            </label>\r\n\r\n            <button class=\"btn form__btn\">Save new password</button>\r\n        </form>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-new-password',\r\n  templateUrl: './new-password.component.html',\r\n  styleUrls: ['./new-password.component.scss']\r\n})\r\nexport class NewPasswordComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>new-password works!</p>\r\n"],"sourceRoot":"webpack:///"}